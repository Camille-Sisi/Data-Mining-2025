[["index.html", "DATA MINING Master Meci - Parcours PISE et CCESE - Option Data", " DATA MINING Master Meci - Parcours PISE et CCESE - Option Data Camille Signoretto, Maîtresse de conférences en économie, Université Paris Cité Février-juin 2025 "],["00-Presentation.html", "Présentation À propos de ce document Prérequis Remerciements Licence", " Présentation À propos de ce document Ce document est la version 2025 du cours de Data Mining dispensé aux étudiants de deuxième année de l’option Data du master MECI parcours PISE et CCESE. Ce cours est partagé avec Claude Grasland, dont vous trouverez la partie à l’adresse suivante : https://claudegrasland.github.io/datamining2025/. Ce document est régulièrement corrigé et mis à jour. La version de référence est disponible en ligne à l’adresse suivante : https://github.com/Camille-Sisi/Data-Mining-2025. Pour toute suggestion ou correction, n’hésitez pas à me contacter par mail. Prérequis Le seul prérequis pour suivre ce document est d’avoir installé R et RStudio sur votre ordinateur. Il s’agit de deux logiciels libres, gratuits, téléchargeables en ligne et fonctionnant sous PC, Mac et Linux. Pour installer R, il suffit de se rendre sur une des pages suivantes1 : Installer R sous Windows Installer R sous Mac Pour installer RStudio, rendez-vous sur la page suivante et téléchargez la version adaptée à votre système : https://www.rstudio.com/products/rstudio/download/#download Remerciements Ce document a bénéficié des suggestions des étudiants qui en ont été les cobayes les premières années. Ce document est généré par l’extension bookdown de Yihui Xie et se base sur le template proposé par Julien Barnier pour introduire des exercices interactifs dans son cours de tidyverse. Licence Ce document est mis à disposition selon les termes de la Licence Creative Commons Attribution - Pas d’Utilisation Commerciale - Partage dans les Mêmes Conditions 4.0 International. Sous Linux, utilisez votre gestionnaire de packages habituel.↩︎ "],["01-Base-de-donnees.html", "Section 1 Récupération de la base de données 1.1 Les données du Recensement de la Population (RP) 1.2 Quelles informations intéressantes dans cette base ?", " Section 1 Récupération de la base de données On va travailler cette année sur les données du Recensement de la Population (RP). C’est une base de données riche en informations, qui s’appuie sur les enquêtes annuelles du recensement et est produite par l’Insee. Les fichiers mis à disposition sur leur site sont au nombre de 9 : ils rassemblent des informations différentes, sur des espaces géographiques différents (canton ou ville, région), et à des niveaux d’analyse différents (individus, ménages/logements). Les derniers fichiers disponibles portent sur l’année 2021 mais nous allons travailer sur l’année 2019 qui rassemble les enquêtes annuelles du recensement (EAR) des années 2017 à 2021. Avant de rentrer plus dans les détails, on va charger les librairies principales que l’on va utiliser lors de cette séance (si elles ne sont pas installées sur votre RStudio, il faut le faire avant en utilisant la commande install.packages(\"nom.du.package\"), on pourra en appeler d’autres dans les deux sections suivantes. # Chargement des librairies library(tidyverse) library(data.table) library(gt) 1.1 Les données du Recensement de la Population (RP) On va travailler plus précisément à partir du fichier “Individus localisés au canton-ou-ville” qui décrit les caractéristiques des individus et celles des ménages qui les occupent. Les données sont localisées au niveau de la commune et de l’IRIS. On ne va pas s’intéresser à l’ensemble de la France, pour des questions d’intérêt et d’analyse, ainsi que des questions pratiques (ces fichiers étant lourds). On va donc télécharger uniquement ce fichier pour la zone A, c’est-à-dire l’Île-de-France. Le mieux est de télécharger le fichier puis le dézipper directement dans R comme ci-dessous en copiant le lien URL sur le site de l’Insee ; et on le stock dans le dossier “data” de notre projet R. Sinon, il reste possible de le télécharger via internet et de l’enregistrer dans un de vos dossiers bien spécifiés pour le “dézipper” ensuite. download.file(url=&quot;https://www.insee.fr/fr/statistiques/fichier/6544333/RP2019_INDCVIZA_csv.zip&quot;, destfile = &quot;data/RP2019_INDCVIZA_csv.zip&quot;) # Le fichier a donc été téléchargé dans le dossier intitulé &quot;data&quot; du projet R, on va # maintenant le dézipper et enregistrer les fichiers extraits dans le même dossier. unzip(&quot;data/RP2019_INDCVIZA_csv.zip&quot;, exdir = &quot;data&quot;) Il nous reste plus qu’à charger les données dans notre environnement RStudio : pour cela on utilise la commande fread du package data.table (à installer avant), car cela va bien plus vite que les fonctions habituelles du type read.csv lorsqu’on a de gros fichiers. On indique également l’option stringsAsFactors=TRUE pour que les variables caractères soient directement transformées en variables “factor” (dont l’utilité est indéniable dans R, on en reparlera plus loin), et on transforme l’objet obtenu en data.frame. # install.packages(&quot;data.table&quot;) library(data.table) RP &lt;- fread(&quot;data/FD_INDCVIZA_2019.csv&quot;, stringsAsFactors=TRUE) RP &lt;- as.data.frame(RP) On a donc 88 variables et 4 354 518 observations. Pour se renseigner sur les variables de la table, on peut télécharger également le fichier des métadonnées avec la commande read.csv cette fois, ce qui nous permet de voir quelles options sont utiles ici : l’argument sep = nous permet d’indiquer comment sont séparées les informations dans le fichier initial, l’argument encoding = permet que les accents aigus soient compris par R comme tel, et enfin la même option stringsAsFactors=TRUE peut être utilisée ici. # Lecture du fichier de métadonnées meta &lt;- read.csv(file = &#39;data/Varmod_INDCVI_2019.csv&#39;, sep = &quot;;&quot;, encoding = &quot;UTF-8&quot;, stringsAsFactors = TRUE) On peut enregistrer ce fichier, ainsi que celui contenant les métadonnées, dans le dossier R au format RDS. # Enregistrement des fichiers saveRDS(object = RP, file = &quot;data/indiv2019.Rdata&quot;) saveRDS(object = meta, file = &quot;data/meta.Rdata&quot;) 1.2 Quelles informations intéressantes dans cette base ? On peut regarder plus précisément les variables disponibles dans cette base de données à partir de la table de métadonnées : on peut le faire avec la fonction view() et dans ce cas la table s’affichera dans un nouvel onglet dans votre RStudio ; sinon pour l’afficher sur notre document notebook, on peut utiliser la fonction head() et/ou tail() qui affiche respectivement les premières lignes et les dernières lignes de la table. # view(meta) meta %&gt;% head() %&gt;% gt() #La fonction gt() permet un affichage plus joli pour le document html #phavjpnxnb table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #phavjpnxnb thead, #phavjpnxnb tbody, #phavjpnxnb tfoot, #phavjpnxnb tr, #phavjpnxnb td, #phavjpnxnb th { border-style: none; } #phavjpnxnb p { margin: 0; padding: 0; } #phavjpnxnb .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #phavjpnxnb .gt_caption { padding-top: 4px; padding-bottom: 4px; } #phavjpnxnb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #phavjpnxnb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #phavjpnxnb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #phavjpnxnb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #phavjpnxnb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #phavjpnxnb .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #phavjpnxnb .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #phavjpnxnb .gt_column_spanner_outer:first-child { padding-left: 0; } #phavjpnxnb .gt_column_spanner_outer:last-child { padding-right: 0; } #phavjpnxnb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #phavjpnxnb .gt_spanner_row { border-bottom-style: hidden; } #phavjpnxnb .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #phavjpnxnb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #phavjpnxnb .gt_from_md > :first-child { margin-top: 0; } #phavjpnxnb .gt_from_md > :last-child { margin-bottom: 0; } #phavjpnxnb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #phavjpnxnb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #phavjpnxnb .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #phavjpnxnb .gt_row_group_first td { border-top-width: 2px; } #phavjpnxnb .gt_row_group_first th { border-top-width: 2px; } #phavjpnxnb .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #phavjpnxnb .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #phavjpnxnb .gt_first_summary_row.thick { border-top-width: 2px; } #phavjpnxnb .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #phavjpnxnb .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #phavjpnxnb .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #phavjpnxnb .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #phavjpnxnb .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #phavjpnxnb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #phavjpnxnb .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #phavjpnxnb .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #phavjpnxnb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #phavjpnxnb .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #phavjpnxnb .gt_left { text-align: left; } #phavjpnxnb .gt_center { text-align: center; } #phavjpnxnb .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #phavjpnxnb .gt_font_normal { font-weight: normal; } #phavjpnxnb .gt_font_bold { font-weight: bold; } #phavjpnxnb .gt_font_italic { font-style: italic; } #phavjpnxnb .gt_super { font-size: 65%; } #phavjpnxnb .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #phavjpnxnb .gt_asterisk { font-size: 100%; vertical-align: 0; } #phavjpnxnb .gt_indent_1 { text-indent: 5px; } #phavjpnxnb .gt_indent_2 { text-indent: 10px; } #phavjpnxnb .gt_indent_3 { text-indent: 15px; } #phavjpnxnb .gt_indent_4 { text-indent: 20px; } #phavjpnxnb .gt_indent_5 { text-indent: 25px; } #phavjpnxnb .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #phavjpnxnb div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } COD_VAR LIB_VAR COD_MOD LIB_MOD TYPE_VAR LONG_VAR CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) 0101 Ambérieu-en-Bugey (0101) CHAR 5 CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) 0102 Attignat (0102) CHAR 5 CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) 0103 Valserhône (0103) CHAR 5 CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) 0104 Belley (0104) CHAR 5 CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) 0105 Bourg-en-Bresse-1 (0105) CHAR 5 CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) 0106 Bourg-en-Bresse-2 (0106) CHAR 5 On peut établir la liste des variables de la base de données en utilisant la fonction levels qui donne les niveaux de la variable “COD_VAR” puisque c’est une variable ‘factor’. levels(meta$COD_VAR) [1] &quot;ACHLR&quot; &quot;AEMMR&quot; &quot;AGED&quot; &quot;AGER20&quot; &quot;AGEREV&quot; &quot;AGEREVQ&quot; [7] &quot;ANAI&quot; &quot;ANEMR&quot; &quot;APAF&quot; &quot;ARM&quot; &quot;ASCEN&quot; &quot;BAIN&quot; [13] &quot;BATI&quot; &quot;CANTVILLE&quot; &quot;CATIRIS&quot; &quot;CATL&quot; &quot;CATPC&quot; &quot;CHAU&quot; [19] &quot;CHFL&quot; &quot;CHOS&quot; &quot;CLIM&quot; &quot;CMBL&quot; &quot;COUPLE&quot; &quot;CS1&quot; [25] &quot;CUIS&quot; &quot;DEPT&quot; &quot;DEROU&quot; &quot;DIPL&quot; &quot;DNAI&quot; &quot;EAU&quot; [31] &quot;EGOUL&quot; &quot;ELEC&quot; &quot;EMPL&quot; &quot;ETUD&quot; &quot;GARL&quot; &quot;HLML&quot; [37] &quot;ILETUD&quot; &quot;ILT&quot; &quot;IMMI&quot; &quot;INAI&quot; &quot;INATC&quot; &quot;INFAM&quot; [43] &quot;INPER&quot; &quot;INPERF&quot; &quot;IPONDI&quot; &quot;IRAN&quot; &quot;IRIS&quot; &quot;LIENF&quot; [49] &quot;LPRF&quot; &quot;LPRM&quot; &quot;METRODOM&quot; &quot;MOCO&quot; &quot;MODV&quot; &quot;NA17&quot; [55] &quot;NA5&quot; &quot;NAIDT&quot; &quot;NBPI&quot; &quot;NE17FR&quot; &quot;NE24FR&quot; &quot;NE3FR&quot; [61] &quot;NE5FR&quot; &quot;NENFR&quot; &quot;NPERR&quot; &quot;NUMF&quot; &quot;NUMMI&quot; &quot;ORIDT&quot; [67] &quot;RECH&quot; &quot;REGION&quot; &quot;SANI&quot; &quot;SANIDOM&quot; &quot;SEXE&quot; &quot;SFM&quot; [73] &quot;STAT_CONJ&quot; &quot;STATR&quot; &quot;STOCD&quot; &quot;SURF&quot; &quot;TACT&quot; &quot;TACTD16&quot; [79] &quot;TP&quot; &quot;TRANS&quot; &quot;TRIRIS&quot; &quot;TYPC&quot; &quot;TYPFC&quot; &quot;TYPL&quot; [85] &quot;TYPMC&quot; &quot;TYPMR&quot; &quot;VOIT&quot; &quot;WC&quot; Les codes des variables n’étant pas très parlant, on va les afficher avec leur intitulé : pour cela, il suffit de repartir de la table meta en sélectionnant les 2 colonnes qui nous intéressent et en n’affichant pas les valeurs dupliquées avec la fonction unique(). meta %&gt;% select(COD_VAR, LIB_VAR) %&gt;% unique() %&gt;% gt() #mppuvueldt table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #mppuvueldt thead, #mppuvueldt tbody, #mppuvueldt tfoot, #mppuvueldt tr, #mppuvueldt td, #mppuvueldt th { border-style: none; } #mppuvueldt p { margin: 0; padding: 0; } #mppuvueldt .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #mppuvueldt .gt_caption { padding-top: 4px; padding-bottom: 4px; } #mppuvueldt .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #mppuvueldt .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #mppuvueldt .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mppuvueldt .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mppuvueldt .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mppuvueldt .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #mppuvueldt .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #mppuvueldt .gt_column_spanner_outer:first-child { padding-left: 0; } #mppuvueldt .gt_column_spanner_outer:last-child { padding-right: 0; } #mppuvueldt .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #mppuvueldt .gt_spanner_row { border-bottom-style: hidden; } #mppuvueldt .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #mppuvueldt .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #mppuvueldt .gt_from_md > :first-child { margin-top: 0; } #mppuvueldt .gt_from_md > :last-child { margin-bottom: 0; } #mppuvueldt .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #mppuvueldt .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #mppuvueldt .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #mppuvueldt .gt_row_group_first td { border-top-width: 2px; } #mppuvueldt .gt_row_group_first th { border-top-width: 2px; } #mppuvueldt .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mppuvueldt .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #mppuvueldt .gt_first_summary_row.thick { border-top-width: 2px; } #mppuvueldt .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mppuvueldt .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mppuvueldt .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #mppuvueldt .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #mppuvueldt .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #mppuvueldt .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mppuvueldt .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mppuvueldt .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #mppuvueldt .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mppuvueldt .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #mppuvueldt .gt_left { text-align: left; } #mppuvueldt .gt_center { text-align: center; } #mppuvueldt .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #mppuvueldt .gt_font_normal { font-weight: normal; } #mppuvueldt .gt_font_bold { font-weight: bold; } #mppuvueldt .gt_font_italic { font-style: italic; } #mppuvueldt .gt_super { font-size: 65%; } #mppuvueldt .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #mppuvueldt .gt_asterisk { font-size: 100%; vertical-align: 0; } #mppuvueldt .gt_indent_1 { text-indent: 5px; } #mppuvueldt .gt_indent_2 { text-indent: 10px; } #mppuvueldt .gt_indent_3 { text-indent: 15px; } #mppuvueldt .gt_indent_4 { text-indent: 20px; } #mppuvueldt .gt_indent_5 { text-indent: 25px; } #mppuvueldt .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #mppuvueldt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } COD_VAR LIB_VAR CANTVILLE Département, canton-ou-ville du lieu de résidence (pseudo-canton) NUMMI Numéro du ménage dans le canton-ou-ville (anonymisé) ACHLR Période regroupée d'achèvement de la construction de la maison ou de l'immeuble AEMMR Année d'emménagement dans le logement (regroupée) AGED Âge détaillé (en différence de millésimes) AGER20 Âge en années révolues (âge au dernier anniversaire) en 13 classes d'âge, détaillées autour de 20 ans AGEREV Âge en années révolues détaillé AGEREVQ Âge quinquennal en années révolues ANAI Année de naissance ANEMR Ancienneté d'emménagement dans le logement (regroupée) APAF Appartenance à une famille ARM Arrondissement municipal de résidence (Paris, Lyon et Marseille) ARM Arrondissement municipal de résidence (Paris,Lyon et Marseille) ASCEN Desserte par un ascenseur BAIN Baignoire ou douche (DOM) BATI Aspect du bâti (DOM) CATIRIS Catégorie de l'IRIS CATL Catégorie de logement CATPC Catégorie de population condensée CHAU Moyen de chauffage du logement (DOM) CHFL Chauffage central du logement (France métropolitaine) CHOS Chauffe-eau solaire (DOM) CLIM Existence d'au moins une pièce climatisée (DOM) CMBL Combustible principal du logement (France métropolitaine) COUPLE Déclaration de vie en couple CS1 Catégorie socioprofessionnelle en 8 postes CUIS Cuisine intérieure avec évier (DOM) DEPT Département du lieu de résidence DEROU Nombre de deux-roues à moteur du ménage (DOM) DIPL Diplôme le plus élevé DNAI Département de naissance (si né en France) EAU Point d'eau potable à l'intérieur du logement (DOM) EGOUL Mode d'évacuation des eaux usées (DOM) ELEC Électricité dans le logement (DOM) EMPL Condition d'emploi ETUD Inscription dans un établissement d'enseignement GARL Emplacement réservé de stationnement HLML Appartenance du logement à un organisme HLM ILETUD Indicateur du lieu d'études ILT Indicateur du lieu de travail IMMI Situation quant à l'immigration INAI Indicateur du lieu de naissance INATC Indicateur de nationalité condensé (Français/Étranger) INFAM Nombre de familles du ménage INPER Nombre de personnes du ménage INPERF Nombre de personnes de la famille IPONDI Poids de l'individu IRAN Indicateur de résidence antérieure au 1er janvier de l'année précédente IRIS Code IRIS du lieu de résidence LIENF Lien familial LPRF Lien à la personne de référence de la famille LPRM Lien à la personne de référence du ménage METRODOM Indicateur Métropole ou DOM du lieu de résidence MOCO Mode de cohabitation MODV Mode de vie NA17 Activité économique en 17 postes (NA - A17) NA5 Activité économique regroupée en 5 postes NAIDT Naissance dans un DOM-TOM-COM NBPI Nombre de pièces du logement NE17FR Nombre d'enfants âgés de 17 ans ou moins de la famille (regroupé) NE24FR Nombre d'enfants âgés de 24 ans ou moins de la famille (regroupé) NE3FR Nombre d'enfants âgés de 3 ans ou moins de la famille (regroupé) NE5FR Nombre d'enfants âgés de 5 ans ou moins de la famille (regroupé) NENFR Nombre d'enfants de la famille (regroupé) NPERR Nombre de personnes du ménage (regroupé) NUMF Numéro de famille ORIDT Originaire d'un DOM-TOM-COM RECH Ancienneté de recherche d'emploi REGION Région du lieu de résidence SANI Installations sanitaires (France métropolitaine) SANIDOM Installations sanitaires (DOM) SEXE Sexe SFM Structure familiale du ménage STATR Statut professionnel regroupé STAT_CONJ Statut conjugal STOCD Statut d'occupation détaillé du logement SURF Superficie du logement TACT Type d'activité TACTD16 Type d'activité détaillé en 16 postes TP Temps de travail TRANS Mode de transport principal le plus souvent utilisé pour aller travailler TRIRIS Code TRIRIS du lieu de résidence TYPC Type de construction TYPFC Type de famille condensé TYPL Type de logement TYPMC Type de ménage regroupé (en 4 postes) TYPMR Type de ménage regroupé (en 9 postes) VOIT Nombre de voitures du ménage WC Présence de W.-C. à l'intérieur du logement (DOM) Ou si on veut les afficher par ordre alphabétique selon le nom de la variable, on peut utiliser la fonction arrange() qui permet de trier une table de données selon la variable indiquée : meta %&gt;% select(COD_VAR, LIB_VAR) %&gt;% unique() %&gt;% arrange(COD_VAR) %&gt;% gt() L’une des difficultés pour l’analyse de cette base de données réside dans les différents niveaux présents : “individu” pour la personne de référence du ménage ; “ménage” regroupant l’ensemble des occupants d’une résidence principale, qu’ils aient ou non des liens de parenté ; “famille” partie d’un ménage comprenant au moins 2 personnes (par exemple, un couple, ou un adulte avec un enfant…) ; et enfin “logement” qui comprend ici les résidences principales et rassemble des informations décrivant les types de logement. Il faut bien comprendre comment utiliser à bon escient ces différents niveaux, en particulier ici le niveau logement : pour toute variable de ce niveau, il faudra utiliser un filtre, c’est-à-dire ne prendre que la personne de référence du ménage (LPRM==\"1\"). Il faut également penser que les données sont pondérées, donc pour sortir des statistiques descriptives, il faut à chaque fois mettre la variable de pondération IPONDI. "],["02-Manipulation-base.html", "Section 2 Manipulation de la base 2.1 Format des données - WIDE ou LONG 2.2 Sélectionner un champ réduit de la base, séparer les données", " Section 2 Manipulation de la base On peut maintenant regarder à quoi ressemble la table principale, celle des données. RP %&gt;% head() %&gt;% gt() #rwftgafmbv table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #rwftgafmbv thead, #rwftgafmbv tbody, #rwftgafmbv tfoot, #rwftgafmbv tr, #rwftgafmbv td, #rwftgafmbv th { border-style: none; } #rwftgafmbv p { margin: 0; padding: 0; } #rwftgafmbv .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #rwftgafmbv .gt_caption { padding-top: 4px; padding-bottom: 4px; } #rwftgafmbv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #rwftgafmbv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #rwftgafmbv .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rwftgafmbv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rwftgafmbv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rwftgafmbv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #rwftgafmbv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #rwftgafmbv .gt_column_spanner_outer:first-child { padding-left: 0; } #rwftgafmbv .gt_column_spanner_outer:last-child { padding-right: 0; } #rwftgafmbv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #rwftgafmbv .gt_spanner_row { border-bottom-style: hidden; } #rwftgafmbv .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #rwftgafmbv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #rwftgafmbv .gt_from_md > :first-child { margin-top: 0; } #rwftgafmbv .gt_from_md > :last-child { margin-bottom: 0; } #rwftgafmbv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #rwftgafmbv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #rwftgafmbv .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #rwftgafmbv .gt_row_group_first td { border-top-width: 2px; } #rwftgafmbv .gt_row_group_first th { border-top-width: 2px; } #rwftgafmbv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rwftgafmbv .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #rwftgafmbv .gt_first_summary_row.thick { border-top-width: 2px; } #rwftgafmbv .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rwftgafmbv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rwftgafmbv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #rwftgafmbv .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #rwftgafmbv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #rwftgafmbv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rwftgafmbv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rwftgafmbv .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #rwftgafmbv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rwftgafmbv .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #rwftgafmbv .gt_left { text-align: left; } #rwftgafmbv .gt_center { text-align: center; } #rwftgafmbv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #rwftgafmbv .gt_font_normal { font-weight: normal; } #rwftgafmbv .gt_font_bold { font-weight: bold; } #rwftgafmbv .gt_font_italic { font-style: italic; } #rwftgafmbv .gt_super { font-size: 65%; } #rwftgafmbv .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #rwftgafmbv .gt_asterisk { font-size: 100%; vertical-align: 0; } #rwftgafmbv .gt_indent_1 { text-indent: 5px; } #rwftgafmbv .gt_indent_2 { text-indent: 10px; } #rwftgafmbv .gt_indent_3 { text-indent: 15px; } #rwftgafmbv .gt_indent_4 { text-indent: 20px; } #rwftgafmbv .gt_indent_5 { text-indent: 25px; } #rwftgafmbv .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #rwftgafmbv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } CANTVILLE NUMMI ACHLR AEMMR AGED AGER20 AGEREV AGEREVQ ANAI ANEMR APAF ARM ASCEN BAIN BATI CATIRIS CATL CATPC CHAU CHFL CHOS CLIM CMBL COUPLE CS1 CUIS DEPT DEROU DIPL DNAI EAU EGOUL ELEC EMPL ETUD GARL HLML ILETUD ILT IMMI INAI INATC INFAM INPER INPERF IPONDI IRAN IRIS LIENF LPRF LPRM METRODOM MOCO MODV NA17 NA5 NAIDT NBPI NE17FR NE24FR NE3FR NE5FR NENFR NPERR NUMF ORIDT RECH REGION SANI SANIDOM SEXE SFM STAT_CONJ STATR STOCD SURF TACT TACTD16 TP TRANS TRIRIS TYPC TYPFC TYPL TYPMC TYPMR VOIT WC 75ZZ 1 1 9 72 79 72 70 1944 02 0 75115 1 Z Z H 1 0 Z 2 Z Z 2 2 7 Z 75 Z 19 2B Z Z Z ZZ 2 1 2 Z Z 2 3 1 0 1 Z 3.360730 1 751155817 0 0 1 M 32 50 ZZ ZZ 0 04 Z Z Z Z Z 1 Z 0 0 11 2 ZZ 2 12 6 Z 10 4 21 210 Z Z 751501 3 Z 1 1 12 1 Z 75ZZ 2 2 9 59 64 58 55 1958 03 1 75112 2 Z Z H 1 0 Z 3 Z Z 4 1 3 Z 75 Z 17 99 Z Z Z 21 2 2 2 Z 1 1 6 1 1 2 2 3.668459 1 751124512 1 1 1 M 21 40 FZ FZ 30 01 0 0 0 0 0 2 1 0 Z 11 1 ZZ 1 30 3 2 21 1 11 116 1 5 750901 3 2 6 4 41 0 Z 75ZZ 2 2 9 30 29 29 25 1987 03 1 75112 2 Z Z H 1 0 Z 3 Z Z 4 1 3 Z 75 Z 16 99 Z Z Z 21 2 2 2 Z 3 1 6 2 1 2 2 3.668459 1 751124512 1 2 2 M 21 31 MN GU 30 01 0 0 0 0 0 2 1 0 Z 11 1 ZZ 1 30 3 2 21 1 11 111 1 6 750901 3 2 6 4 41 0 Z 75ZZ 3 1 7 82 80 81 80 1938 05 2 75115 1 Z Z H 1 0 Z 2 Z Z 2 1 7 Z 75 Z 14 92 Z Z Z ZZ 2 1 2 Z Z 2 2 1 1 2 2 3.478821 1 751155907 2 2 2 M 21 40 ZZ ZZ 0 03 0 0 0 0 0 2 1 0 9 11 2 ZZ 2 30 1 Z 10 4 21 210 Z Z 751431 3 2 2 4 44 1 Z 75ZZ 3 1 7 86 80 85 85 1934 05 1 75115 1 Z Z H 1 0 Z 2 Z Z 2 1 7 Z 75 Z 14 75 Z Z Z ZZ 2 1 2 Z Z 2 1 1 1 2 2 3.478821 1 751155907 1 1 1 M 21 40 ZZ ZZ 0 03 0 0 0 0 0 2 1 0 9 11 2 ZZ 1 30 1 Z 10 4 21 210 Z Z 751431 3 2 2 4 44 1 Z 75ZZ 4 2 9 1 2 0 0 2019 01 3 75116 1 Z Z H 1 0 Z 2 Z Z 2 2 8 Z 75 Z ZZ 92 Z Z Z ZZ 2 1 2 Z Z 2 2 1 1 3 3 2.776887 Z 751166301 3 3 3 M 12 12 ZZ ZZ 0 04 2 2 2 2 2 3 1 0 Z 11 2 ZZ 1 22 6 Z 30 6 23 230 Z Z 751741 3 1 2 3 32 1 Z La fonction str() ou son équivalent en langage dplyr la fonction glimpse nous donne la liste des variables avec cette fois leur format et leurs modalités (les premières seulement s’il y en a beaucoup). # str(RP) RP %&gt;% glimpse() Rows: 4,354,518 Columns: 88 $ CANTVILLE &lt;fct&gt; 75ZZ, 75ZZ, 75ZZ, 75ZZ, 75ZZ, 75ZZ, 75ZZ, 75ZZ, 75ZZ, 75ZZ, … $ NUMMI &lt;fct&gt; 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 7, 7, 7, 8, 9, 10, 10, 1… $ ACHLR &lt;fct&gt; 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 4, 3, 3, 3, 3, 4, 3, 4, 4, 4, … $ AEMMR &lt;fct&gt; 9, 9, 9, 7, 7, 9, 9, 9, 6, 6, 9, 9, 9, 9, 9, 7, 6, 9, 9, 9, … $ AGED &lt;int&gt; 72, 59, 30, 82, 86, 1, 34, 3, 67, 67, 34, 51, 48, 17, 13, 82… $ AGER20 &lt;int&gt; 79, 64, 29, 80, 80, 2, 39, 2, 79, 79, 39, 54, 54, 17, 14, 80… $ AGEREV &lt;int&gt; 72, 58, 29, 81, 85, 0, 33, 2, 67, 66, 33, 50, 47, 16, 12, 81… $ AGEREVQ &lt;int&gt; 70, 55, 25, 80, 85, 0, 30, 0, 65, 65, 30, 50, 45, 15, 10, 80… $ ANAI &lt;int&gt; 1944, 1958, 1987, 1938, 1934, 2019, 1986, 2017, 1950, 1950, … $ ANEMR &lt;fct&gt; 02, 03, 03, 05, 05, 01, 01, 01, 06, 06, 01, 03, 03, 03, 03, … $ APAF &lt;fct&gt; 0, 1, 1, 2, 1, 3, 2, 3, 1, 2, 0, 1, 2, 3, 3, 0, 0, 3, 2, 3, … $ ARM &lt;fct&gt; 75115, 75112, 75112, 75115, 75115, 75116, 75116, 75116, 7511… $ ASCEN &lt;fct&gt; 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, … $ BAIN &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ BATI &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ CATIRIS &lt;fct&gt; H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, … $ CATL &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … $ CATPC &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … $ CHAU &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ CHFL &lt;fct&gt; 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, … $ CHOS &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ CLIM &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ CMBL &lt;fct&gt; 2, 4, 4, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 1, 1, 1, 1, … $ COUPLE &lt;int&gt; 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, … $ CS1 &lt;int&gt; 7, 3, 3, 7, 7, 8, 8, 8, 7, 7, 3, 5, 5, 8, 8, 7, 7, 5, 4, 4, … $ CUIS &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ DEPT &lt;int&gt; 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, … $ DEROU &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ DIPL &lt;fct&gt; 19, 17, 16, 14, 14, ZZ, 18, ZZ, 17, 16, 18, 03, 13, 03, ZZ, … $ DNAI &lt;fct&gt; 2B, 99, 99, 92, 75, 92, 92, 92, 92, 92, 49, 99, 99, 93, 75, … $ EAU &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ EGOUL &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ ELEC &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … $ EMPL &lt;fct&gt; ZZ, 21, 21, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, 16, 16, 16, ZZ, ZZ, … $ ETUD &lt;int&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, … $ GARL &lt;fct&gt; 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, … $ HLML &lt;fct&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, … $ ILETUD &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, 1, 1, Z, Z, Z, Z, Z, … $ ILT &lt;fct&gt; Z, 1, 3, Z, Z, Z, Z, Z, Z, Z, 3, 1, 1, Z, Z, Z, Z, 1, 1, Z, … $ IMMI &lt;int&gt; 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, … $ INAI &lt;int&gt; 3, 6, 6, 2, 1, 2, 2, 2, 2, 2, 3, 6, 6, 2, 1, 1, 2, 3, 3, 3, … $ INATC &lt;int&gt; 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … $ INFAM &lt;fct&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, … $ INPER &lt;fct&gt; 1, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 4, 4, 4, 4, 1, 1, 3, 3, 3, … $ INPERF &lt;fct&gt; Z, 2, 2, 2, 2, 3, 3, 3, 2, 2, Z, 4, 4, 4, 4, Z, Z, 3, 3, 3, … $ IPONDI &lt;dbl&gt; 3.360730, 3.668459, 3.668459, 3.478821, 3.478821, 2.776887, … $ IRAN &lt;fct&gt; 1, 1, 1, 1, 1, Z, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … $ IRIS &lt;fct&gt; 751155817, 751124512, 751124512, 751155907, 751155907, 75116… $ LIENF &lt;fct&gt; 0, 1, 1, 2, 1, 3, 2, 3, 1, 2, 0, 1, 2, 3, 3, 0, 0, 3, 2, 3, … $ LPRF &lt;fct&gt; 0, 1, 2, 2, 1, 3, 1, 3, 1, 2, 0, 1, 2, 3, 3, 0, 0, 3, 1, 3, … $ LPRM &lt;fct&gt; 1, 1, 2, 2, 1, 3, 1, 3, 1, 2, 1, 1, 2, 3, 3, 1, 1, 3, 1, 3, … $ METRODOM &lt;fct&gt; M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, … $ MOCO &lt;int&gt; 32, 21, 21, 21, 21, 12, 23, 12, 21, 21, 32, 22, 22, 11, 11, … $ MODV &lt;int&gt; 50, 40, 31, 40, 40, 12, 33, 12, 40, 40, 20, 32, 32, 11, 11, … $ NA17 &lt;fct&gt; ZZ, FZ, MN, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, OQ, MN, MN, ZZ, ZZ, … $ NA5 &lt;fct&gt; ZZ, FZ, GU, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, OQ, GU, GU, ZZ, ZZ, … $ NAIDT &lt;int&gt; 0, 30, 30, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 0, 0, 0, 0, 0, 0,… $ NBPI &lt;fct&gt; 04, 01, 01, 03, 03, 04, 04, 04, 08, 08, 01, 03, 03, 03, 03, … $ NE17FR &lt;fct&gt; Z, 0, 0, 0, 0, 2, 2, 2, 0, 0, Z, 2, 2, 2, 2, Z, Z, 0, 0, 0, … $ NE24FR &lt;fct&gt; Z, 0, 0, 0, 0, 2, 2, 2, 0, 0, Z, 2, 2, 2, 2, Z, Z, 1, 1, 1, … $ NE3FR &lt;fct&gt; Z, 0, 0, 0, 0, 2, 2, 2, 0, 0, Z, 0, 0, 0, 0, Z, Z, 0, 0, 0, … $ NE5FR &lt;fct&gt; Z, 0, 0, 0, 0, 2, 2, 2, 0, 0, Z, 0, 0, 0, 0, Z, Z, 0, 0, 0, … $ NENFR &lt;fct&gt; Z, 0, 0, 0, 0, 2, 2, 2, 0, 0, Z, 2, 2, 2, 2, Z, Z, 2, 2, 2, … $ NPERR &lt;fct&gt; 1, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 4, 4, 4, 4, 1, 1, 3, 3, 3, … $ NUMF &lt;fct&gt; Z, 1, 1, 1, 1, 1, 1, 1, 1, 1, Z, 1, 1, 1, 1, Z, Z, 1, 1, 1, … $ ORIDT &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … $ RECH &lt;fct&gt; 0, Z, Z, 9, 9, Z, 0, Z, 0, 0, Z, Z, Z, 0, Z, 9, 0, Z, Z, 1, … $ REGION &lt;int&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, … $ SANI &lt;fct&gt; 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … $ SANIDOM &lt;fct&gt; ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, ZZ, … $ SEXE &lt;int&gt; 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, … $ SFM &lt;fct&gt; 12, 30, 30, 30, 30, 22, 22, 22, 30, 30, 12, 32, 32, 32, 32, … $ STAT_CONJ &lt;int&gt; 6, 3, 3, 1, 1, 6, 1, 6, 1, 1, 6, 3, 3, 6, 6, 4, 5, 6, 6, 6, … $ STATR &lt;fct&gt; Z, 2, 2, Z, Z, Z, Z, Z, Z, Z, 1, 1, 1, Z, Z, Z, Z, 1, 1, Z, … $ STOCD &lt;fct&gt; 10, 21, 21, 10, 10, 30, 30, 30, 10, 10, 21, 30, 30, 30, 30, … $ SURF &lt;fct&gt; 4, 1, 1, 4, 4, 6, 6, 6, 7, 7, 1, 4, 4, 4, 4, 3, 3, 6, 6, 6, … $ TACT &lt;int&gt; 21, 11, 11, 21, 21, 23, 24, 23, 21, 21, 11, 11, 11, 22, 23, … $ TACTD16 &lt;int&gt; 210, 116, 111, 210, 210, 230, 240, 230, 210, 210, 111, 111, … $ TP &lt;fct&gt; Z, 1, 1, Z, Z, Z, Z, Z, Z, Z, 2, 1, 1, Z, Z, Z, Z, 1, 1, Z, … $ TRANS &lt;fct&gt; Z, 5, 6, Z, Z, Z, Z, Z, Z, Z, 6, 6, 6, Z, Z, Z, Z, 6, 1, Z, … $ TRIRIS &lt;fct&gt; 751501, 750901, 750901, 751431, 751431, 751741, 751741, 7517… $ TYPC &lt;fct&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, … $ TYPFC &lt;fct&gt; Z, 2, 2, 2, 2, 1, 1, 1, 2, 2, Z, 2, 2, 2, 2, Z, Z, 1, 1, 1, … $ TYPL &lt;fct&gt; 1, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … $ TYPMC &lt;fct&gt; 1, 4, 4, 4, 4, 3, 3, 3, 4, 4, 1, 4, 4, 4, 4, 1, 1, 3, 3, 3, … $ TYPMR &lt;fct&gt; 12, 41, 41, 44, 44, 32, 32, 32, 44, 44, 12, 41, 41, 41, 41, … $ VOIT &lt;fct&gt; 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, … $ WC &lt;fct&gt; Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, … Les variables sont en format, soit ‘int’ (“integer” - nombres entiers), soit ‘fct’ (“factor”), ou encore ‘dbl’ (“double” - nombres réels). On remarque que la plupart des variables ont des modalités en chiffres et/ou lettres, ce qui signifie qu’il faudra probablement recoder ces modalités pour leur donner des libellés dans nos analyses descriptives (tableaux ou graphiques). Par ailleurs, certaines variables ont été laissées en format ‘integer’ bien que l’on avait mis l’option stringsAsFactors=TRUE lors du chargement des données, or ces chiffres correspondent bien à des modalités d’une variable catégorielle, il faudra donc le corriger ultérieurement. Dernière remarque, si on avait eu des valeurs manquantes sur certaines variables, elles se seraient ici affichées avec la modalité NA, cela ne semble pas le cas, à vérifier par la suite. En revanche, on voit parfois des modalités “z” ou “zz”, il faudra vérifier ce qu’elles indiquent. 2.1 Format des données - WIDE ou LONG La question du format de la table de données est importante, on distingue généralement le format wide du format long : le premier renvoie au cas où chaque ligne correspond a un et un seul individu (ou autre niveau de l’analyse : une entreprise, un ménage, un logement, etc.), et toutes les informations le concernant sont données en colonnes (ce qui peut augmenter rapidement le nombre de colonnes), c’est l’exemple d’une information que l’on a sur plusieurs années, chaque colonne correspondant à l’information de l’année en question ; le second, au contraire, multiplie les lignes pour un seul individu, mais il y a alors moins de colonnes, à partir du même exemple précédent, il y aura cette fois une colonne indiquant l’année et une colonne contenant l’information. Ici, chaque ligne correspond à un individu auquel est associé un logement, un ménage ou encore une famille ; on est bien dans un format wide. L’unité statistique de base est donc l’individu, mais on peut vouloir choisir de se mettre au niveau logement ou ménage ou famille, pour étudier les caractéristiques de ces unités. Autre exemple, on peut aussi considérer que notre niveau d’analyse est la commune, on verra alors qu’on dispose de plusieurs lignes par commune et si l’on veut garder quelques informations à ce niveau en n’ayant plus qu’une ligne par commune, il faudra sommer ces informations. Le package tidyverse contient deux fonctions qui permettent de passer d’un format à un autre : pivot_longer() et pivot_wider() présentés en détails ici. Nous aurons l’occasion de les utiliser ultérieurement dans ce cours. 2.2 Sélectionner un champ réduit de la base, séparer les données Manipuler une base de données, c’est aussi travailler ou créer une table réduite, surtout quand on a des données volumineuses comme ici : c’est donc choisir un champ particulier de la base. On peut par exemple choisir un champ géographique plus réduit au sein de l’Île-de-France, à partir de la commune : Paris et sa petite couronne. On peut aussi choisir de séparer les données en créant 2 tables selon l’unité statistique : l’individu ; ou le logement avec la seule personne de référence du ménage. Comme vous le savez très probablement, dans le langage tidyverse, pour faire des sélections sur les lignes ou observations dans une table de données, on utilise la fonction filter() ; pour faire des sélections sur les colonnes ou variables, on utilise la fonction select() ; pour supprimer des variables, on utilise également select() avec un “-” devant la (ou les) variable(s) à supprimer (dans le langage R de base, on peut aussi utiliser la fonction subset()). EXERCICES : Créer trois nouvelles bases selon les indications suivantes : la première que vous nommerez “RP_Paris” et qui rassemblera les données pour le seul département de Paris ; la deuxième que nous nommerez “RP_indiv” et qui comprendra les données pour les seules variables décrivant l’individu (et ce sera celle de la personne de référence du ménage) ; la troisième que vous nommerez “RP_final”, qui rassemblera les données pour les départements de Paris et de sa petite couronne, et qui comprendra toutes les variables décrivant l’individu, le logement et enfin les variables géographiques. RP_Paris &lt;- RP %&gt;% filter(DEPT == &quot;75&quot;) RP_indiv &lt;- RP %&gt;% select(&quot;AEMMR&quot;, &quot;AGED&quot;, &quot;AGER20&quot;, &quot;AGEREV&quot;,&quot;AGEREVQ&quot;,&quot;ANAI&quot;, &quot;ANEMR&quot;,&quot;APAF&quot;,&quot;COUPLE&quot;,&quot;CS1&quot;,&quot;DIPL&quot;,&quot;DNAI&quot;,&quot;EMPL&quot;, &quot;ETUD&quot;,&quot;ILETUD&quot;,&quot;ILT&quot;,&quot;IMMI&quot;,&quot;INAI&quot;,&quot;INATC&quot;,&quot;IPONDI&quot;, &quot;IRAN&quot;,&quot;LPRF&quot;,&quot;LPRM&quot;,&quot;MOCO&quot;,&quot;MODV&quot;,&quot;NA17&quot;, &quot;NA5&quot;,&quot;NAIDT&quot;,&quot;ORIDT&quot;,&quot;RECH&quot;,&quot;SEXE&quot;,&quot;STAT_CONJ&quot;, &quot;STATR&quot;,&quot;TACT&quot;,&quot;TACTD16&quot;,&quot;TP&quot;,&quot;TRANS&quot;) RP_final &lt;- RP %&gt;% filter(DEPT %in% c(&quot;75&quot;,&quot;92&quot;,&quot;93&quot;,&quot;94&quot;)) %&gt;% select(-c(&quot;NUMMI&quot;,&quot;INPERF&quot;,&quot;DEROU&quot;,&quot;LIENF&quot;,&quot;INFAM&quot;, &quot;NE17FR&quot;,&quot;INPER&quot;, &quot;NE24FR&quot;,&quot;NPERR&quot;, &quot;NE3FR&quot;, &quot;SFM&quot;, &quot;NE5FR&quot;, &quot;TYPMC&quot;, &quot;NENFR&quot;,&quot;TYPMR&quot;, &quot;NUMF&quot;,&quot;VOIT&quot;, &quot;TYPFC&quot;)) On va dorénavant travailler sur cette dernière table RP_final, on l’enregistre donc dans notre dossier “data”, ainsi que le fichier meta que nous avons modifié précédemments : # Enregistrement des fichiers saveRDS(object = RP_final , file = &quot;data/RP_final.Rdata&quot;) saveRDS(object = meta, file = &quot;data/meta.Rdata&quot;) "],["03-Manipulation-variables.html", "Section 3 Manipulation des variables 3.1 Manipulation des variables qualitatives 3.2 Manipulation des variables quantitatives", " Section 3 Manipulation des variables Dans la manipulation des variables, l’une des premières choses à réaliser est de les définir dans le bon format, variables quantitatives/continues ou variables qualitatives/catégorielles. On l’a vu dans la section précédente, certaines variables sont encore codées comme des nombres entiers (“integer”) alors que ce sont des variables catégorielles. On va donc corriger cela en regardant d’abord quelles variables sont concernées, en les sélectionnant avec select_if() ou select(where()) : RP_final %&gt;% select_if(is.numeric) %&gt;% names() [1] &quot;AGED&quot; &quot;AGER20&quot; &quot;AGEREV&quot; &quot;AGEREVQ&quot; &quot;ANAI&quot; &quot;CATPC&quot; [7] &quot;COUPLE&quot; &quot;CS1&quot; &quot;DEPT&quot; &quot;ETUD&quot; &quot;IMMI&quot; &quot;INAI&quot; [13] &quot;INATC&quot; &quot;IPONDI&quot; &quot;MOCO&quot; &quot;MODV&quot; &quot;NAIDT&quot; &quot;ORIDT&quot; [19] &quot;REGION&quot; &quot;SEXE&quot; &quot;STAT_CONJ&quot; &quot;TACT&quot; &quot;TACTD16&quot; A part les variables d’âge AGED et AGEREV, de date de naissance ANAI et de pondération IPONDI, toutes les autres variables devraient en format “factor”. Deux façons de les transformer, soit vous changer les variables une à une en utilisant les fonctions mutate() et as.factor() ; soit vous créer une liste avec le nom des variables dont le format doit être transformer et vous utilisez la fonction lapply() en l’appliquant à cette liste de variables : # 1ère méthode # RP_final &lt;- RP_final %&gt;% mutate(AGER20=as.factor(AGER20), # AGEREVQ=as.factor(AGEREVQ), # CATPC=as.factor(CATPC), # COUPLE=as.factor(COUPLE), # CS1=as.factor(CS1), # DEPT=as.factor(DEPT), # ETUD=as.factor(ETUD), # IMMI=as.factor(IMMI), # INAI=as.factor(INAI), # INATC=as.factor(INATC), # MOCO=as.factor(MOCO), # MODV=as.factor(MODV), # NAIDT=as.factor(NAIDT), # ORIDT=as.factor(ORIDT), # REGION=as.factor(REGION), # SEXE=as.factor(SEXE), # STAT_CONJ=as.factor(STAT_CONJ), # TACT=as.factor(TACT), # TACTD16=as.factor(TACTD16)) # 2nde méthode list_var &lt;- c(&quot;AGER20&quot;, &quot;AGEREVQ&quot;, &quot;CATPC&quot;, &quot;COUPLE&quot;, &quot;CS1&quot;, &quot;DEPT&quot;, &quot;ETUD&quot;, &quot;IMMI&quot;, &quot;INAI&quot;, &quot;INATC&quot;, &quot;MOCO&quot;, &quot;MODV&quot;, &quot;NAIDT&quot;, &quot;ORIDT&quot;, &quot;REGION&quot;, &quot;SEXE&quot;, &quot;STAT_CONJ&quot;, &quot;TACT&quot;, &quot;TACTD16&quot;) RP_final[, list_var] &lt;- lapply(RP_final[, list_var], factor) On peut ensuite vérifier que ces variables sont bien des variables facteurs en regardant combien de modalités elles ont et quelles sont-elles. Par exemple, pour la variable CATPC : nlevels(RP_final$CATPC) [1] 3 levels(RP_final$CATPC) [1] &quot;0&quot; &quot;1&quot; &quot;2&quot; Si nous n’avions pas mis l’option transformant les variables caractères en variables facteurs lors du chargement des données, nous pourrions le faire maintenant en utilisant la fonction mutate_if ou la combinaison de mutate et across(where()) comme ceci RP %&gt;% mutate_if(is.character, as.factor) ou RP %&gt;% mutate(across(where(is.character), as.factor)). On peut enfin vérifier quelles sont les variables numériques qui restent : # RP_final %&gt;% select_if(is.numeric) %&gt;% head() %&gt;% gt() RP_final %&gt;% select(where(is.numeric)) %&gt;% head() %&gt;% gt() #jjjzuixtwp table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #jjjzuixtwp thead, #jjjzuixtwp tbody, #jjjzuixtwp tfoot, #jjjzuixtwp tr, #jjjzuixtwp td, #jjjzuixtwp th { border-style: none; } #jjjzuixtwp p { margin: 0; padding: 0; } #jjjzuixtwp .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jjjzuixtwp .gt_caption { padding-top: 4px; padding-bottom: 4px; } #jjjzuixtwp .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jjjzuixtwp .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #jjjzuixtwp .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jjjzuixtwp .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jjjzuixtwp .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jjjzuixtwp .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jjjzuixtwp .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jjjzuixtwp .gt_column_spanner_outer:first-child { padding-left: 0; } #jjjzuixtwp .gt_column_spanner_outer:last-child { padding-right: 0; } #jjjzuixtwp .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jjjzuixtwp .gt_spanner_row { border-bottom-style: hidden; } #jjjzuixtwp .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #jjjzuixtwp .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jjjzuixtwp .gt_from_md > :first-child { margin-top: 0; } #jjjzuixtwp .gt_from_md > :last-child { margin-bottom: 0; } #jjjzuixtwp .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jjjzuixtwp .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #jjjzuixtwp .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #jjjzuixtwp .gt_row_group_first td { border-top-width: 2px; } #jjjzuixtwp .gt_row_group_first th { border-top-width: 2px; } #jjjzuixtwp .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jjjzuixtwp .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #jjjzuixtwp .gt_first_summary_row.thick { border-top-width: 2px; } #jjjzuixtwp .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jjjzuixtwp .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jjjzuixtwp .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jjjzuixtwp .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #jjjzuixtwp .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jjjzuixtwp .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jjjzuixtwp .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jjjzuixtwp .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #jjjzuixtwp .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jjjzuixtwp .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #jjjzuixtwp .gt_left { text-align: left; } #jjjzuixtwp .gt_center { text-align: center; } #jjjzuixtwp .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jjjzuixtwp .gt_font_normal { font-weight: normal; } #jjjzuixtwp .gt_font_bold { font-weight: bold; } #jjjzuixtwp .gt_font_italic { font-style: italic; } #jjjzuixtwp .gt_super { font-size: 65%; } #jjjzuixtwp .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #jjjzuixtwp .gt_asterisk { font-size: 100%; vertical-align: 0; } #jjjzuixtwp .gt_indent_1 { text-indent: 5px; } #jjjzuixtwp .gt_indent_2 { text-indent: 10px; } #jjjzuixtwp .gt_indent_3 { text-indent: 15px; } #jjjzuixtwp .gt_indent_4 { text-indent: 20px; } #jjjzuixtwp .gt_indent_5 { text-indent: 25px; } #jjjzuixtwp .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #jjjzuixtwp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } AGED AGEREV ANAI IPONDI 72 72 1944 3.360730 59 58 1958 3.668459 30 29 1987 3.668459 82 81 1938 3.478821 86 85 1934 3.478821 1 0 2019 2.776887 Plus généralement, il est souvent d’usage d’utiliser la fonction summary() pour donner un aperçu de l’ensemble des variables, soit de leur distribution pour les variables quantitatives, soit de leur répartition par modalités pour les variables qualitatives ; la fonction permet également de nous donner l’information sur l’existence et le nombre de valeurs manquantes pour chaque variable. summary(RP_final) CANTVILLE ACHLR AEMMR AGED 75ZZ : 853167 3 :687155 9 :2032861 Min. : 0.00 9296 : 47490 4 :656626 8 : 286192 1st Qu.: 21.00 9398 : 43375 2 :314367 7 : 146463 Median : 36.00 9399 : 43104 1 :303570 6 : 91377 Mean : 38.44 9499 : 37585 6 :301595 Z : 34562 3rd Qu.: 55.00 9299 : 36678 5 :270547 5 : 30169 Max. :120.00 (Other):1574634 (Other):102173 (Other): 14409 AGER20 AGEREV AGEREVQ ANAI 54 :515753 Min. : 0.0 25 : 226438 Min. :1896 39 :412404 1st Qu.: 20.0 30 : 214781 1st Qu.:1963 64 :273384 Median : 36.0 35 : 197623 Median :1981 79 :263157 Mean : 37.5 20 : 186496 Mean :1980 29 :226438 3rd Qu.: 54.0 40 : 181466 3rd Qu.:1997 24 :186496 Max. :119.0 0 : 177322 Max. :2020 (Other):758401 (Other):1451907 ANEMR APAF ARM ASCEN BAIN 01 :655689 3 :777547 ZZZZZ :1782866 1:1460332 X: 34562 03 :564056 0 :643516 75115 : 90717 2:1141139 Z:2601471 02 :542791 2 :620004 75118 : 78739 Z: 34562 00 :317238 1 :539040 75120 : 75863 04 :256066 Z : 34562 75119 : 73388 05 :140210 6 : 8547 75113 : 70196 (Other):159983 (Other): 12817 (Other): 464264 BATI CATIRIS CATL CATPC CHAU CHFL X: 34562 A: 29884 1:2601471 0:2601471 X: 34562 1:1370090 Z:2601471 D: 1488 Z: 34562 1: 26328 Z:2601471 2: 654195 H:2597963 2: 8234 3: 563224 X: 988 4: 13962 Z: 5710 X: 34562 CHOS CLIM CMBL COUPLE CS1 CUIS X: 34562 X: 34562 1: 583799 1:1091726 8 :903563 X: 34562 Z:2601471 Z:2601471 2:1060384 2:1544307 3 :457534 Z:2601471 3: 117844 7 :374763 4: 764429 5 :343737 5: 7861 4 :323394 6: 67154 6 :162434 X: 34562 (Other): 70608 DEPT DIPL DNAI EAU EGOUL 75:853167 18 :486255 99 :716703 X: 34562 X: 34562 92:621663 ZZ :465748 75 :538277 Z:2601471 Z:2601471 93:629049 17 :280471 92 :262709 94:532154 13 :252762 93 :241894 14 :252350 94 :185218 16 :197267 78 : 37782 (Other):701180 (Other):653450 ELEC EMPL ETUD GARL HLML X: 34562 ZZ :1432384 1: 689558 1:1286127 1: 784089 Z:2601471 16 : 913146 2:1946475 2:1315344 2:1817382 15 : 104235 Z: 34562 Z: 34562 21 : 86275 22 : 48699 11 : 25485 (Other): 25809 ILETUD ILT IMMI INAI INATC Z :1946475 Z :1432384 1: 614842 1:738724 1:2180430 1 : 484682 3 : 533246 2:2021191 2:614762 2: 455603 3 : 114507 1 : 449857 3:518740 2 : 76273 2 : 204924 4: 45574 4 : 13812 4 : 12853 5: 1530 5 : 167 7 : 2524 6:716703 (Other): 117 (Other): 245 IPONDI IRAN IRIS LPRF Min. : 0.000 1 :2305666 920120303: 6961 0:643516 1st Qu.: 1.103 2 : 112053 ZZZZZZZZZ: 5710 1:654441 Median : 2.933 4 : 69107 930700109: 5523 2:517420 Mean : 2.596 3 : 40599 751187110: 4104 3:762238 3rd Qu.: 3.404 Z : 38020 920360501: 3818 4: 17410 Max. :30.057 5 : 34401 751176714: 3807 5: 6446 (Other): 36187 (Other) :2606110 Z: 34562 LPRM METRODOM MOCO MODV 1 :1209833 M:2636033 22 :585580 32 :585580 3 : 763890 11 :569579 11 :569579 2 : 513339 32 :526421 50 :321174 8 : 38136 21 :449260 40 :291436 Z : 34562 12 :216515 12 :216515 6 : 32123 23 :137021 20 :205247 (Other): 44150 (Other):151657 (Other):446502 NA17 NA5 NAIDT NBPI ZZ :1432384 AZ: 626 0 :1872226 03 :773582 OQ : 316215 BE: 68660 30 : 716703 04 :628152 MN : 223963 FZ: 50464 11 : 18616 02 :491816 GZ : 129585 GU: 767684 12 : 16979 05 :284228 JZ : 101100 OQ: 316215 14 : 5933 01 :263674 KZ : 78928 ZZ:1432384 13 : 3526 06 : 97433 (Other): 353858 (Other): 2050 (Other): 97148 ORIDT RECH REGION SANI SANIDOM 0 :2570233 0: 595136 11:2636033 0: 17248 XX: 34562 11 : 26547 1: 99394 1: 148161 ZZ:2601471 12 : 23668 2: 81634 2:2436062 14 : 8155 9: 189296 X: 34562 13 : 4671 Z:1670573 18 : 908 (Other): 1851 SEXE STAT_CONJ STATR STOCD SURF TACT 1:1263098 1: 806273 1:1067681 10:992691 4 :736488 11:1203649 2:1372935 2: 90782 2: 135968 21:627380 3 :583150 12: 179713 3: 229555 Z:1432384 22:757862 5 :440798 21: 382445 4: 101992 23:151152 1 :239343 22: 240715 5: 137488 30: 72386 2 :233363 23: 465748 6:1269943 ZZ: 34562 6 :189749 24: 64030 (Other):213142 25: 99733 TACTD16 TP TRANS TRIRIS TYPC 111 :1127202 1:1026823 1: 39223 ZZZZZZ : 47639 1: 259226 230 : 465748 2: 176826 2: 102898 931411 : 10563 2: 194433 210 : 382445 Z:1432384 3: 40772 920331 : 8408 3:2124270 220 : 240715 4: 44362 931071 : 8032 4: 22451 122 : 127564 5: 311836 940721 : 7834 5: 1091 250 : 99733 6: 664558 921011 : 7686 Z: 34562 (Other): 192626 Z:1432384 (Other):2545871 TYPL WC 1: 330946 X: 34562 2:2220098 Z:2601471 3: 25394 4: 15607 5: 1942 6: 7484 Z: 34562 Mais attention, le problème ici est que cela nous donne des fréquences non pondérées pour l’ensemble de nos variables qualitatives, donc qui n’ont finalement pas grand sens. 3.1 Manipulation des variables qualitatives On peut d’abord travailler sur les variables qualitatives qui correspondent ici à l’essentiel de nos variables. Comme on le sait, on peut regarder les différents niveaux pour chacune d’entre elles, avec la fonction levels(). Si on veut appliquer la fonction à l’ensemble de nos variables facteurs sans avoir donc à les indiquer une par une, on peut avoir recours à la fonction sapply() qui permet d’appliquer la fonction indiquée entre parenthèses (ici levels()) à tous les éléments de notre table de données. # Pour info, ici cela s&#39;écrirait : RP_final %&gt;% select(where(is.factor)) %&gt;% sapply(levels) # on peut même se passer de la sélection sur les variables : # RP %&gt;% sapply(levels) On peut ensuite vouloir retravailler les modalités de ces variables, car par exemple les modalités ne sont pas parlantes puisque nommées par des codes chiffres, ou parce que les modalités sont trop nombreuses et qu’on souhaiterait les rassembler pour une analyse ultérieure. Par exemple, si l’on veut étudier la répartition de la population francilienne selon leur statut d’activité, on peut utiliser la variable TACT: levels(RP_final$TACT) [1] &quot;11&quot; &quot;12&quot; &quot;21&quot; &quot;22&quot; &quot;23&quot; &quot;24&quot; &quot;25&quot; Mais le moins qu’on puisse dire c’est que les 7 modalités de cette variable ne sont pas parlantes, on peut donc recoder les modalités de cette variable dans une étape préalable DATA comme ici ; on pourra bien sûr enchaîner plus tard les lignes de codes et réaliser cette étape dans une même procédure avec le tableau ou le graphique représentant cette variable. Commençons ici par l’étape DATA : # On cherche à quoi correspondent les modalités chiffrées de cette variable # dans le fichier &quot;meta&quot; meta %&gt;% filter(COD_VAR==&quot;TACT&quot;) %&gt;% select(COD_MOD, LIB_MOD) # A tibble: 7 × 2 COD_MOD LIB_MOD &lt;fct&gt; &lt;fct&gt; 1 11 Actifs ayant un emploi, y compris sous apprentissage ou en stage rému… 2 12 Chômeurs 3 21 Retraités ou préretraités 4 22 Élèves, étudiants, stagiaires non rémunéré de 14 ans ou plus 5 23 Moins de 14 ans 6 24 Femmes ou hommes au foyer 7 25 Autres inactifs # On recode à partir de ces libellés, tout en regroupant certaines modalités # qui sont très spécifiques et nous intéressent moins : RP_final &lt;- RP_final %&gt;% mutate(TACT_moda = as.factor( case_when(TACT == &quot;11&quot; ~ &quot;Actifs en emploi&quot;, TACT == &quot;12&quot; ~ &quot;Chômeurs&quot;, TACT == &quot;21&quot; ~ &quot;Retraités&quot;, TACT %in% c(&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;) ~ &quot;Autres inactifs&quot;))) levels(RP_final$TACT_moda) [1] &quot;Actifs en emploi&quot; &quot;Autres inactifs&quot; &quot;Chômeurs&quot; &quot;Retraités&quot; Si l’on veut changer l’ordre des modalités, qui s’afficheront comme ci-dessus dans un tableau ou un graphique, on peut utiliser la fonction fct_relevel() du package forcats (à installer avant puis à appeler avant de l’utiliser) : # install.package(&quot;forcats&quot;) library(forcats) RP_final &lt;- RP_final %&gt;% mutate(TACT_moda = fct_relevel(TACT_moda, c(&quot;Actifs en emploi&quot;,&quot;Chômeurs&quot;, &quot;Retraités&quot;, &quot;Autres inactifs&quot;))) levels(RP_final$TACT_moda) [1] &quot;Actifs en emploi&quot; &quot;Chômeurs&quot; &quot;Retraités&quot; &quot;Autres inactifs&quot; Plus largement, pour travailler sur des variables qualitatives en particulier lorsqu’elles sont en format facteur, le package forcats est très utile. Outre une fonction de transformation d’une variable caractère en facteur (as_factor() proche de la version de baseR as.factor() utilisée en début de section), elle contient plein d’autres fonctions : fct_collapse() utilisée pour renommer ou regrouper des modalités d’une variable (au lieu de la double fonction as.factor() et case_when()) ; fct_relevel() utilisée également au-dessus pour trier les modalités comme on le souhaite ; fct_drop() pour enlever des niveaux de facteurs vides/sans effectifs ; fct_explicit_na() pour rendre les NA explicites en créant une modalité “(missing)” ; fct_reorder() et fct_reorder2() pour réordonner les modalités d’une variable, très utile pour les graphiques car utilisables directement dans ggplot() ; fct_lump() pour regrouper les modalités les plus communes (ou au contraire les moins communes) en lui indiquant entre parenthèses le nombre n= de modalités souhaitées ou la proportion minimum souhaitée prop=, et en sélectionnant la variable avec la fonction pull() avant car elle doit être en format vecteur et non data.frame ; ou encore fct_recode() pour changer le niveau des facteurs ; fct_other() ; fct_infreq() et fct_inorder() ; etc. Un bon récapitulatif de ces fonctions est présenté ici. 3.2 Manipulation des variables quantitatives Comme nous l’avons vu plus haut, il y a peu de variables quantitatives dans cette base et l’une d’entre elles est la pondération, donc on va regarder plus précisément la variable AGED. Cependant, celle-ci aussi est particulière car c’est une variable numérique constituée d’entiers naturels (et non de valeurs réelles) qui vont de 0 à 120 ; dans le fichier des métadonnées (ou le dictionnaire des variables disponible également sur le site de l’Insee), on se rend compte que la variable a été pensée comme catégorielle avec des modalités d’abord codées comme “000”, “001”, etc. meta %&gt;% filter(COD_VAR==&quot;AGED&quot;) %&gt;% select(COD_MOD, LIB_MOD) %&gt;% tail() # A tibble: 6 × 2 COD_MOD LIB_MOD &lt;fct&gt; &lt;fct&gt; 1 115 115 ans 2 116 116 ans 3 117 117 ans 4 118 118 ans 5 119 119 ans 6 120 120 ans On peut alors regarder rapidement la distribution de cette variable. summary(RP_final$AGED) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 21.00 36.00 38.44 55.00 120.00 On peut aussi construire des variables continues en agrégeant certaines informations au niveau des communes par exemple. Reprenons la variable d’activité dont nous avons recoder et regrouper les modalités et calculons-là pour avoir le nombre de chaque modalité par commune. Il faut pour cela créer la variable de commune, qu’on appelera COM, à partir de l’IRIS : RP_final &lt;- RP_final %&gt;% mutate(COM=substr(IRIS, 1, 5)) On va ensuite sommer chaque modalité de la variable TACT_moda en utilisant la pondération en groupant par commune. EXERCICE : Créer donc un tableau qui aura 3 colonnes COM, TACT_moda et n. Vous pouvez utiliser les fonctions group_by suivi soit de count, soit de summarise ; on cherchera finalement à arrondir ces valeurs à l’unité avec la fonction round(). Vous devez obtenir le tableau suivant : Tab_com_TACT &lt;- RP_final %&gt;% group_by(COM) %&gt;% count(TACT_moda, wt=IPONDI) %&gt;% mutate(n=round(n)) # RP_final %&gt;% group_by(COM, TACT_moda) %&gt;% # summarise(n=sum(IPONDI)) %&gt;% # mutate(n=round(n)) On voit qu’on a un tableau dans un format “long” puisqu’il y a plusieurs observations pour une seule commune. On va utiliser la fonction pivot_wider() mentionnée précédemment pour n’avoir qu’une ligne par commune et en colonne les types de statut avec leur nombre respectif. Tab_com_TACT &lt;- Tab_com_TACT %&gt;% pivot_wider(names_from = TACT_moda, values_from = n) Tab_com_TACT # A tibble: 137 × 5 COM `Actifs en emploi` Chômeurs Retraités `Autres inactifs` &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 75101 8366 941 2630 3979 2 75102 13118 1378 2148 4964 3 75103 19239 2085 4589 8123 4 75104 15227 1863 4508 7513 5 75105 27378 2611 10607 17618 6 75106 18073 1842 8180 12176 7 75107 23394 2165 9573 13735 8 75108 18254 1565 5297 10534 9 75109 34155 3482 7264 15125 10 75110 46454 6343 10645 23078 # ℹ 127 more rows "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
